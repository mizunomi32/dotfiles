
# ファイルツリー表示
[[plugins]]
repo = 'scrooloose/nerdtree'
# ここで起動設定書きたい
hook_add = '''
let g:NERDTreeDirArrowExpandable = '▸'
let g:NERDTreeDirArrowCollapsible = '▾'
let g:NERDTreeShowHidden=1
map <C-t> :NERDTreeToggle<CR>

'''
# ファイルアイコン
[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_add = 'let g:WebDevIconsUnicodeDecorateFolderNodes = 1'
# インデントを可視化
[[plugins]]
repo = 'Yggdroot/indentLine'


# 無駄な空白をハイライト
[[plugins]]
repo = 'bronson/vim-trailing-whitespace'
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
"colorscheme tir_black
set ts=2 sw=2 et
let g:indent_guides_start_level=2
let g:indent_guides_guide_size=1
let g:indent_guides_enable_on_vim_startup = 1

'''
# 補完
[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_i = 1
on_event = "InsertCharPre"
hook_add = """
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#auto_complete_delay = 0
  let g:deoplete#auto_complete_start_length = 1
  let g:deoplete#enable_camel_case = 0
  let g:deoplete#enable_ignore_case = 0
  let g:deoplete#enable_refresh_always = 0
  let g:deoplete#enable_smart_case = 1
  let g:deoplete#file#enable_buffer_path = 1
  let g:deoplete#max_list = 10000
  set completeopt-=preview
  highlight Pmenu ctermbg=8 guibg=#606060
	highlight PmenuSel ctermbg=1 guifg=#dddd00 guibg=#1f82cd
	highlight PmenuSbar ctermbg=0 guibg=#d6d6d6
  " autocmd InsertLeave,CompleteDone * if pumvisible() == 0 | pclose | endif
"""
[[plugins]]
repo = 'Shougo/neco-vim'
[[plugins]]
repo = 'Shougo/neco-syntax'
# js 補完
[[plugins]]
repo = 'carlitux/deoplete-ternjs'
on_ft = ['javascript','jsx']

# Rubyの自動補完
[[plugins]]
repo = 'Shougo/deoplete-rct'
on_ft = ['ruby']
[[plugins]]
repo = 'takkii/Bignyanco'
# Rubyの自動補完
[[plugins]]
repo = 'fishbullet/deoplete-ruby'
on_ft = ['ruby']
# Rubyの自動補完
[[plugins]]
repo = 'osyo-manga/vim-monster'
on_i = 1
hook_add = '''
let g:monster#completion#rcodetools#backend = "async_rct_complete"
let g:deoplete#sources#omni#input_patterns = {
  \ "ruby" : '[^. *\t]\.\w*\|\h\w*::',
  \}
'''
# c/ c++ /obj-c/obj-c++の補完
[[plugins]]
repo = 'zchee/deoplete-clang'
on_ft = ['c', 'cpp', 'cmake']
hook_source = '''
    let g:deoplete#sources#clang#libclang_path = system("llvm-config --prefix")[:-2] . '/lib/libclang.dylib'
    let g:deoplete#sources#clang#clang_header = system("llvm-config --prefix")[:-2] . '/lib/clang'
    let g:deoplete#sources#clang#sort_algo = 'priority'
    let g:deoplete#sources#clang#clang_complete_database="./build/"
'''
depends = ['deoplete.nvim']
on_i = 1
on_ft = ['c', 'cpp']
# go 補完
[[plugins]]
repo = "zchee/deoplete-go"
build ="make"
# Rubyのend補完
[[plugins]]
repo = 'tpope/vim-endwise'
on_i = 1
on_ft = ['ruby']
# python
[[plugins]]
repo = 'zchee/deoplete-jedi'
on_i = 1
on_ft = 'python'
[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'
on_ft = 'python'
[[plugins]]
repo = "nvie/vim-flake8"
[[plugins]]
repo = 'bfredl/nvim-ipy'
#hook_add = '''
#"filetypes": ["python", "python3", "djangohtml"]
#'''

[[plugins]]
repo = 'w0rp/ale'

hook_add = '''
" エラー行に表示するマーク
let g:ale_sign_error = '⨉'
let g:ale_sign_warning = '⚠'
" エラー行にカーソルをあわせた際に表示されるメッセージフォーマット
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
" エラー表示の列を常時表示
let g:ale_sign_column_always = 1

" ファイルを開いたときにlint実行
let g:ale_lint_on_enter = 1
" ファイルを保存したときにlint実行
let g:ale_lint_on_save = 1
" 編集中のlintはしない
let g:ale_lint_on_text_changed = 'never'

" lint結果をロケーションリストとQuickFixには表示しない
" 出てると結構うざいしQuickFixを書き換えられるのは困る
let g:ale_set_loclist = 0
let g:ale_set_quickfix = 0
let g:ale_open_list = 0
let g:ale_keep_list_window_open = 0

" 有効にするlinter
let g:ale_linters = {
\   'python': ['flake8'],
\}

" ALE用プレフィックス
nmap [ale] <Nop>
map <C-k> [ale]
" エラー行にジャンプ
nmap <silent> [ale]<C-P> <Plug>(ale_previous)
nmap <silent> [ale]<C-N> <Plug>(ale_next)
'''

# latex
#[[plugins]]
#repo = 'thinca/vim-quickrun'
#hook_post_source = '''
#let g:quickrun_config = {
#   'tex': {
#       'command': 'latexmk',
#      'exec': ['%c -gg -pdfdvi %s', 'open %s:r.pdf']
#   },
#}
#'''
[[plugins]]
repo = 'lervag/vimtex'

[[plugins]]
repo = 'yuratomo/w3m.vim'
hook_add = '''
" ホームページ
let g:w3m#homepage = "http://www.google.com/"

" デフォルトの検索エンジン
let g:w3m#search_engine = 'https://www.google.com/search?'

'''
[[plugins]]
repo = 'simeji/winresizer'
